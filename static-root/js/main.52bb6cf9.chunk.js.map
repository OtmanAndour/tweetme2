{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","message","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newValue","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","addEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.52bb6cf9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n    const xhr = new XMLHttpRequest();\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.responseType = \"json\";\r\n    const csrftoken = getCookie(\"csrftoken\");\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    if (csrftoken) {\r\n      xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n    xhr.onload = function () {\r\n      callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n      console.log(e);\r\n      callback({ message: \"The request was an error\" }, 400);\r\n    };\r\n    xhr.send(jsonData);\r\n  }\r\n\r\n\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : \"btn btn-primary\";\r\n    const display =\r\n      action.type === \"like\" ? `${likes} ${action.display}` : action.display;\r\n  \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status);\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status);\r\n      }\r\n    };\r\n  \r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }\r\n  ","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = {id: tweetId, action: action}\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\",`/tweets/${tweetId}/`, callback, {});\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback, {});\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ActionBtn } from \"./buttons\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <div className=\"row\">\r\n      <div className=\"col-11 mx-auto p-3 border rounded\">\r\n        <p className=\"mb-0 text-muted small\">Retweet</p>\r\n        <Tweet hideActions className={\"\"} tweet={tweet.parent} />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  const className = props.className\r\n    ? props.className\r\n    : \"col-10 mx-aut col-md-6\";\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n  const handleLink = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <p>\r\n          {tweet.id} - {tweet.content}\r\n        </p>\r\n        <ParentTweet tweet={tweet} />\r\n      </div>\r\n      <div className=\"btn btn-group\">\r\n        {actionTweet && hideActions !== true && (\r\n          <React.Fragment>\r\n            <ActionBtn\r\n              tweet={actionTweet}\r\n              didPerformAction={handlePerformAction}\r\n              action={{ type: \"like\", display: \"Likes\" }}\r\n            />\r\n            <ActionBtn\r\n              tweet={actionTweet}\r\n              didPerformAction={handlePerformAction}\r\n              action={{ type: \"unlike\", display: \"Unlike\" }}\r\n            />\r\n            <ActionBtn\r\n              tweet={actionTweet}\r\n              didPerformAction={handlePerformAction}\r\n              action={{ type: \"retweet\", display: \"Retweet\" }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {isDetail === true ? null : (\r\n          <button className=\"btn btn-outline-primary\" onClick={handleLink}>\r\n            View\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setTweetsInit(response);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error.\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  return tweets.map((item, index) => {\r\n    return (\r\n      <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        key={`${index}-{item.id}`}\r\n        className=\"my-5 py-5 border bg-white text-dark\"\r\n      />\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured please try again\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newValue = textAreaRef.current.value;\r\n    // backend api request\r\n    apiTweetCreate(newValue, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TweetsList } from \"./list\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    }\r\n    else {\r\n      alert('There was an error finding your tweet.')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>;\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {TweetsComponent} from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst addEl = document.getElementById(\"root\");\nif (addEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    addEl\n  );\n}\n\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme-2\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}