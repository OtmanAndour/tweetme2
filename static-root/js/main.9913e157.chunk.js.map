{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","message","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","display","type","handleActionBackendEvent","console","log","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newValue","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","addEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9913e157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n    const xhr = new XMLHttpRequest();\r\n    const url = `http://localhost:8000/api${endpoint}`;\r\n    xhr.responseType = \"json\";\r\n    const csrftoken = getCookie(\"csrftoken\");\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n    if (csrftoken) {\r\n      //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n      xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n      xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    }\r\n    xhr.onload = function () {\r\n      if (xhr.status === 403) {\r\n        const detail = xhr.response.detail\r\n        if (detail === \"Authentication credentials were not provided.\") {\r\n          if (window.location.href.indexOf(\"login\") === -1 ) {\r\n            window.location.href = \"/login?showLoginRequired=true\"\r\n          }\r\n        }\r\n      }\r\n      callback(xhr.response, xhr.status);\r\n    };\r\n    xhr.onerror = function (e) {\r\n      callback({ message: \"The request was an error\" }, 400);\r\n    };\r\n    xhr.send(jsonData);\r\n  }\r\n\r\n\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = {id: tweetId, action: action}\r\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\",`/tweets/${tweetId}/`, callback, {});\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback, {});\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\"\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback, {});\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction } = props;\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : \"btn btn-primary\";\r\n    const display =\r\n      action.type === \"like\" ? `${likes} ${action.display}` : action.display;\r\n  \r\n    const handleActionBackendEvent = (response, status) => {\r\n      console.log(response, status);\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status);\r\n      }\r\n    };\r\n  \r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }\r\n  ","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n  const handleUserLink = (e) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return <span onClick={handleUserLink}>{props.children}</span>;\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\r\n  return (\r\n    <React.Fragment>\r\n      {nameDisplay}\r\n      {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user, hideLink } = props;\r\n  const userIdSpan = <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n  {user.username[0]}\r\n</span>\r\n  return ( hideLink === true ? userIdSpan :\r\n    <UserLink username={user.username}>\r\n      {userIdSpan}\r\n    </UserLink>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport numeral from 'numeral'\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n    }","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport { DisplayCount } from \"./utils\";\r\n\r\nfunction ProfileBadge(props) {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n  const handleFollowToggle = (e) => {\r\n    e.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n  return user ? (\r\n    <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p>\r\n        <UserDisplay user={user} includeFullName hideLink />\r\n      </p>{\" \"}\r\n      <p>\r\n        <DisplayCount>{user.follower_count}</DisplayCount>{\" \"}\r\n        {user.follower_count === 1 ? \"follower\" : \"follower\"}\r\n      </p>{\" \"}\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following\r\n      </p>{\" \"}\r\n      <p> {user.location} </p>\r\n      <p> {user.bio} </p>\r\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  // lookup\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n  const handleNewFollow = (actionVerb) => {\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      console.log(response, status);\r\n      if (status === 200) {\r\n        setProfile(response);\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n    setProfileLoading(true);\r\n  };\r\n  return didLookup === false ? (\r\n    \"Loading...\"\r\n  ) : profile ? (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  ) : null;\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  backendLookup(\"GET\",`/profiles/${username}/`, callback, {});\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n  const data = {action: `${action && action}`.toLowerCase()}\r\n  backendLookup(\"POST\",`/profiles/${username}/follow`, callback, data);\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { ActionBtn } from \"./buttons\";\r\nimport { UserDisplay, UserPicture } from \"../profiles\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet\r\n      isRetweet\r\n      retweeter={props.retweeter}\r\n      hideActions\r\n      className={\"\"}\r\n      tweet={tweet.parent}\r\n    />\r\n  ) : null;\r\n}\r\n\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-aut col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  const path = window.location.pathname;\r\n  const match = path.match(/(?<tweetid>\\d+)/);\r\n  const urlTweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\r\n  const handleLink = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweet via <UserDisplay user={retweeter} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n          </div>\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformAction={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {isDetail === true ? null : (\r\n              <button className=\"btn btn-outline-primary\" onClick={handleLink}>\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error.\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault()\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error.\");\r\n        }\r\n      }\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n  \r\n  return <React.Fragment> {tweets.map((item, index) => {\r\n    return (\r\n      <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        key={`${index}-{item.id}`}\r\n        className=\"my-5 py-5 border bg-white text-dark\"\r\n      />\r\n    );\r\n  })}\r\n  { nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load Next</button>}\r\n  </React.Fragment>\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured please try again\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newValue = textAreaRef.current.value;\r\n    // backend api request\r\n    apiTweetCreate(newValue, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Tweet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiTweetFeed } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault()\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next)\r\n          const newTweets = [...tweets].concat(response.results)\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } \r\n      }\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n    }\r\n  }\r\n  \r\n  return <React.Fragment> {tweets.map((item, index) => {\r\n    return (\r\n      <Tweet\r\n        tweet={item}\r\n        didRetweet={handleDidRetweet}\r\n        key={`${index}-{item.id}`}\r\n        className=\"my-5 py-5 border bg-white text-dark\"\r\n      />\r\n    );\r\n  })}\r\n  { nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">Load Next</button>}\r\n  </React.Fragment>\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TweetsList } from \"./list\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\nimport { FeedList } from './feed'\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    }\r\n    else {\r\n      alert('There was an error finding your tweet.')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>;\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {TweetsComponent} from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport {ProfileBadgeComponent} from \"./profiles\"\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst addEl = document.getElementById(\"root\");\nif (addEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    addEl\n  );\n}\n\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme-2\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\");\n\nuserProfileBadgeElements.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}